#include <iostream>
#include <vector>

using namespace std;

void printNth(vector<int>, int);

int main() {

	/*
	 * "Look and Say" for N Iterations
	 *
	 * Prompt:
	 * 		Pattern
	 * 			1 0 1 1 1 0 0 1
	 *			1 1 1 0 3 1 2 0 1 1
	 *			3 1 1 0 1 3 1 1 1 2 1 0 2 1
	 *
	 *		Input:
	 *			1 0 1 1 1 0 0 1
	 *
	 * 		Output:
	 * 			If N = 1: 1 1 1 0 3 1 2 0 1 1
	 * 			If N = 2: 1 1 1 0 3 1 2 0 1 1
	 * 					  3 1 1 0 1 3 1 1 1 2 1 0 2 1
	 * 			*N = number of times to repeat operation. Uses output of N-1 as input.
	 *
	 * Explanation: Each line is generated by the previous (except line 1, which is given)
	 * 		Line 1 (input): "1" <- First element
	 * 		Line 2 (output): "11" (one 1) <- Above's pronunciation
	 * 			line 1: "0" <- Second element
	 * 			Line 2: "10" (one 0) <- Above's pronunciation
	 * 				Line 1: "111" <- Third (and consecutive repeated) elements
	 * 				Line 2: "31" (three 1s) <- Above's pronunciation
	 * 					etc.
	 *
	 */

	vector<int> arr = {1, 0, 1, 1, 1, 0, 0, 1};

	cout << "Input:\n";
	for (int i = 0; i < arr.size(); i++) {
		cout << arr[i];
	}
	cout << "\n\nOutput:\n";

	printNth(arr, 2);

}

void printNth(vector<int> arr, int n) {

	vector<int> inputArr = arr;
	vector<int> outputArr;

	/* Do this for n number of times
	 * 		For example, if n = 2
	 * 			Input: 1 0 1 1 1 0 0 1
	 * 			Output: 1 1 1 0 3 1 2 0 1 1
	 * 				    3 1 1 0 1 3 1 1 1 2 1 0 2 1
	 */
	for (int loopTimes = 0; loopTimes < n; loopTimes++) {

		int j, count = 0;
		for (int i = 0; i < inputArr.size(); i++) {

			//Check for duplicate sequences
			for (j = i; j < inputArr.size() ; j++) {
				if (inputArr[j] == inputArr[i]) {
					count++;
				} else {
					break;
				}
			}

			//Print-outs and modify i
			if (count > 0) {
				cout << count << inputArr[i];
				outputArr.push_back(count);
				outputArr.push_back(arr[i]);
				count = 0;
				i = j - 1;
			} else {
				cout << "1" << inputArr[i];
				outputArr.push_back(1);
				outputArr.push_back(arr[i]);
			}
		}
		cout << endl;

		inputArr = outputArr;
	}
}
